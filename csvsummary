#!/usr/bin/env python

import datetime
import random

from csvkit import init_common_parser, extract_csv_reader_kwargs
from csvkit import table

def median(l):
    """
    Compute the median of a list.
    """
    length = len(l)

    if len(l) % 2 == 1:
        return l[((length + 1) / 2) - 1]
    else:
        a = l[(length / 2) - 1]
        b = l[length / 2]
    return (float(a + b)) / 2  

def main(args):
    """
    Print descriptive statistics for all columns in a CSV.
    """
    tab = table.Table.from_csv(args.file, **extract_csv_reader_kwargs(args))

    null_excluder = lambda i: i is not None

    for c in tab:
        values = sorted(filter(null_excluder, c))
        uniques = set(c)

        print '%3i. %s' % (c.order, c.name)

        if c.type == None:
            print '\tEmpty column'
            continue
            
        print '\t%s' % c.type
        print '\tNulls: %s' % ('Yes' if c.nullable else 'No')
        
        if len(uniques) <= 5:
            print '\tValues: %s' % ', '.join(['"%s"' % unicode(u) for u in uniques])
        else:
            # Skip min/max for strings and bools
            if c.type not in [unicode, bool]:
                minval = min(values)
                maxval = max(values)

                if c.type in [datetime.datetime, datetime.date, datetime.time]:
                    minval = minval.isoformat()
                    maxval = maxval.isoformat()

                print '\tMin: %s' % min(values)
                print '\tMax: %s' % max(values)

                if c.type in [int, float]:
                    print '\tMean: %s' % (sum(values) / len(values))
                    print '\tMedian: %s' % median(values) 

            print '\tUnique values: %i' % len(uniques)

            if c.type == unicode:
                print '\tMax length: %i' % c.max_length
                
                uniques.discard(None)
                print '\tSamples: %s' % (', '.join(['"%s"' % unicode(u) for u in random.sample(uniques, 5)]))

if __name__ == '__main__':
    parser = init_common_parser(description='Print descriptive statistics for all columns in a CSV file.')

    main(parser.parse_args())

